{"version":3,"sources":["components/Filters/Filters.module.css","components/MoviesItem/MoviesItem.module.css","components/MoviesWillWatch/MoviesWillWatch.module.css","components/Pagination/Pagination.module.css","components/MoviesList/Movieslist.module.css","components/App.module.css","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","components/Filters/Filters.jsx","components/MoviesWillWatch/MoviesWillWatch.jsx","components/Pagination/Pagination.jsx","components/App.jsx","api.js","serviceWorker.js","index.js"],"names":["module","exports","MoviesItem","props","movie","addMovieToWillWatch","removeMovieFromWillWatch","useState","willWatch","setWillWatch","className","cls","card","src","backdrop_path","poster_path","alt","title","cardBody","cardTitle","release_date","split","cardBodyDesc","vote_average","type","btnActive","btnPrimary","onClick","MoviesList","movies","boxList","map","key","id","Filters","sortBy","updateSortBy","setClassName","value","updateFilter","boxButton","btn","MoviesWillWatch","moviesWillWatch","itemWillWatch","length","listGroup","item","listGroupItem","boxItem","rating","Pagination","currentPage","totalPages","updateCurrentPage","setSteps","pagination","arrow","pages","App","setMoviesWillWatch","updateMovies","filter","useMoviesWillWatch","setSortBy","setCurrentPage","setMovies","setTotalPages","getMovies","fetch","then","response","json","data","total_pages","results","useMovies","useEffect","app","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59fbc73d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxButton\":\"Filters_boxButton__1R5qU\",\"btn\":\"Filters_btn__ZGuNK\",\"btnPrimary\":\"Filters_btnPrimary__lF8PP\",\"btnActive\":\"Filters_btnActive__l-6aU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MoviesItem_card__8Oat8\",\"cardBody\":\"MoviesItem_cardBody__2d8WK\",\"cardTitle\":\"MoviesItem_cardTitle__2mIXk\",\"cardBodyDesc\":\"MoviesItem_cardBodyDesc__2dxwr\",\"btnPrimary\":\"MoviesItem_btnPrimary__2KKqF\",\"btnActive\":\"MoviesItem_btnActive__KSepn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWillWatch\":\"MoviesWillWatch_itemWillWatch__3kWCa\",\"listGroup\":\"MoviesWillWatch_listGroup__hswu6\",\"listGroupItem\":\"MoviesWillWatch_listGroupItem__1rF7-\",\"boxItem\":\"MoviesWillWatch_boxItem__33efO\",\"rating\":\"MoviesWillWatch_rating__l-EGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2plzt\",\"arrow\":\"Pagination_arrow__3na1i\",\"pages\":\"Pagination_pages__2TgFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxList\":\"Movieslist_boxList__h9Twu\",\"card\":\"Movieslist_card__3hAAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","import React, { useState } from 'react';\nimport cls from './MoviesItem.module.css';\n\nconst MoviesItem = (props) => {\n\tconst { movie, addMovieToWillWatch, removeMovieFromWillWatch } = props;\n  const [willWatch, setWillWatch] = useState(false);\n\n\tconst changeWillWatch = () => {\n\t\twillWatch ?\n\t\t\tremoveMovieFromWillWatch(movie) :\n\t\t\taddMovieToWillWatch(movie);\n\n    setWillWatch(!willWatch);\n  }\n\n  return (\n\t\t<div className={cls.card}>\n\t\t\t<img\n\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${\n\t\t\t\t\tmovie.backdrop_path || movie.poster_path\n\t\t\t\t}`}\n\t\t\t\talt={movie.title}\n\t\t\t/>\n\t\t\t<div className={cls.cardBody}>\n\t\t\t\t<h5 className={cls.cardTitle}>{movie.title}</h5>\n\t\t\t\t<h5>{`(${movie.release_date.split('-')[0]})`}</h5>\n\t\t\t\t<div className={cls.cardBodyDesc}>\n\t\t\t\t\t<p>Rating: {movie.vote_average}</p>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName={`btn ${willWatch ? cls.btnActive : cls.btnPrimary}`}\n\t\t\t\t\t\tonClick={changeWillWatch}\n\t\t\t\t\t>\n\t\t\t\t\t\tWill watch\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MoviesItem;\n","import React from 'react';\nimport cls from './Movieslist.module.css';\nimport MoviesItem from '../MoviesItem/MoviesItem'\n\nconst MoviesList = (props) => {\n\n\tconst { movies, addMovieToWillWatch, removeMovieFromWillWatch } = props;\n\n  return (\n\t\t<div className={cls.boxList}>\n\t\t\t{movies.map(movie => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={movie.id} className={cls.card}>\n\t\t\t\t\t\t<MoviesItem\n\t\t\t\t\t\t\tmovie={movie}\n\t\t\t\t\t\t\taddMovieToWillWatch={addMovieToWillWatch}\n\t\t\t\t\t\t\tremoveMovieFromWillWatch={removeMovieFromWillWatch}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default MoviesList;","import React from 'react';\nimport cls from './Filters.module.css';\n\n\nconst Filters = (props) => {\n\tconst { sortBy, updateSortBy } = props;\n\tconst setClassName = value => `${sortBy === value ? cls.btnActive : ''}`;\n\tconst updateFilter = value => {\n\t\treturn () => {\n\t\t\tupdateSortBy(value);\n\t\t}\n\t};\n\n  return (\n\t\t<div className={cls.boxButton}>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName={`${cls.btn} ${cls.btnPrimary} ${setClassName(\n\t\t\t\t\t'popularity.desc',\n\t\t\t\t)}`}\n\t\t\t\tonClick={updateFilter('popularity.desc')}\n\t\t\t>\n\t\t\t\tPopularity desc\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName={`${cls.btn} ${cls.btnPrimary} ${setClassName(\n\t\t\t\t\t'revenue.desc',\n\t\t\t\t)}`}\n\t\t\t\tonClick={updateFilter('revenue.desc')}\n\t\t\t>\n\t\t\t\tRevenue desc\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName={`${cls.btn} ${cls.btnPrimary} ${setClassName(\n\t\t\t\t\t'vote_average.desc',\n\t\t\t\t)}`}\n\t\t\t\tonClick={updateFilter('vote_average.desc')}\n\t\t\t>\n\t\t\t\tVote average desc\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Filters;","import React from 'react';\nimport cls from './MoviesWillWatch.module.css';\n\nconst MoviesWillWatch = (props) => {\n  const { moviesWillWatch } = props;\n  return (\n\t\t<div className={cls.itemWillWatch}>\n\t\t\t<h3>Will Watch: {moviesWillWatch.length} movies</h3>\n\t\t\t<ul className={cls.listGroup}>\n\t\t\t\t{moviesWillWatch.map((item) => (\n\t\t\t\t\t<li className={cls.listGroupItem} key={item.id}>\n\t\t\t\t\t\t<div className={cls.boxItem}>\n\t\t\t\t\t\t\t<div>{item.title}</div>\n\t\t\t\t\t\t\t<div className={cls.rating}>{` * ${item.vote_average}`}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default MoviesWillWatch;\n","import React from 'react';\nimport cls from './Pagination.module.css';\n\nconst Pagination = (props) => {\n  const { currentPage, totalPages, updateCurrentPage, setSteps } = props;\n  const nextPage = () => {\n    if (currentPage >= 500) {\n      return updateCurrentPage(500);\n    }\n    updateCurrentPage(currentPage + setSteps);\n  }\n\n  const previousPage = () => {\n    if (currentPage <= 1) {\n      return updateCurrentPage(1);\n    }\n    updateCurrentPage(currentPage - setSteps);\n  }\n\n  return (\n\t\t<div className={cls.pagination}>\n\t\t\t<div className={cls.arrow} onClick={previousPage}>\n\t\t\t\t<i className='fas fa-arrow-left'></i>\n\t\t\t</div>\n\t\t\t<div className={cls.pages}>\n\t\t\t\t<h5>Current page: {currentPage}</h5>\n\t\t\t\t<h5>Total pages: {totalPages}</h5>\n\t\t\t</div>\n\t\t\t<div className={cls.arrow} onClick={nextPage}>\n\t\t\t\t<i className='fas fa-arrow-right'></i>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Pagination;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport cls from './App.module.css';\nimport MoviesList from './MoviesList/MoviesList';\nimport Filters from './Filters/Filters';\nimport MoviesWillWatch from './MoviesWillWatch/MoviesWillWatch';\nimport { API_URL, API_KEY_3 } from '../api';\nimport Pagination from './Pagination/Pagination'\n\nconst useMoviesWillWatch = () => {\n  const [moviesWillWatch, setMoviesWillWatch] = useState([]);\n  const addMovieToWillWatch = (movie) => {\n\t\tsetMoviesWillWatch([...moviesWillWatch, movie]);\n\t};\n\n\tconst removeMovieFromWillWatch = (movie) => {\n\t\tlet updateMovies = moviesWillWatch.filter((item) => item.id !== movie.id);\n\t\tsetMoviesWillWatch(updateMovies);\n  };\n\n  return {\n\t\tmoviesWillWatch,\n\t\taddMovieToWillWatch,\n\t\tremoveMovieFromWillWatch,\n\t};\n}\n\nconst useMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n\n\tconst getMovies = ({ sortBy, currentPage }) => {\n\t\tfetch(\n\t\t\t`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${sortBy}&language=en-US&page=${currentPage}`,\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetTotalPages(data.total_pages);\n\t\t\t\tsetMovies(data.results);\n\t\t\t});\n\t};\n\n\treturn {\n    movies,\n    totalPages,\n\t\tgetMovies,\n\t};\n};\n\nconst App = () => {\n  const {\n\t\tmoviesWillWatch,\n\t\taddMovieToWillWatch,\n\t\tremoveMovieFromWillWatch,\n  } = useMoviesWillWatch();\n\n  const [sortBy, setSortBy] = useState('popularity.desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const setSteps = 1;\n\n  const {\n    movies,\n    totalPages,\n    getMovies,\n  } = useMovies();\n\n  const updateCurrentPage = (value) => {\n\t\tsetCurrentPage(value);\n\t};\n\n  const updateSortBy = value => {\n    setSortBy(value);\n  }\n\n  useEffect(() => {\n\t\tgetMovies({ sortBy, currentPage });\n\t\treturn () => {};\n\t}, [sortBy, currentPage]);\n\n\n\n  return (\n\t\t<div className={`contaner ${cls.app}`}>\n\t\t\t<div className='boxMovies'>\n\t\t\t\t<Filters updateSortBy={updateSortBy} sortBy={sortBy} />\n\t\t\t\t<MoviesList\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\taddMovieToWillWatch={addMovieToWillWatch}\n\t\t\t\t\tremoveMovieFromWillWatch={removeMovieFromWillWatch}\n\t\t\t\t/>\n\t\t\t\t<Pagination\n\t\t\t\t\ttotalPages={totalPages}\n\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\tupdateCurrentPage={updateCurrentPage}\n\t\t\t\t\tsetSteps={setSteps}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='boxWillMovies'>\n\t\t\t\t<MoviesWillWatch moviesWillWatch={moviesWillWatch} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY_3 = '3f4ca4f3a9750da53450646ced312397';\nconst API_KEY_4 =\n\t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4';\n\n\nexport { API_URL, API_KEY_3, API_KEY_4 };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}